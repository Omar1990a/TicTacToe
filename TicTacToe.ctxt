#BlueJ class context
comment0.params=
comment0.target=TicTacToe()
comment0.text=\n\ Constructor\ for\ objects\ of\ class\ TicTacToe\n
comment1.params=
comment1.target=void\ showBoard()
comment1.text=\n\ showBoard\:\ Method\ to\ show\ the\ current\ 3x3\ board\ of\ squares.\n\ Also,\ shows\ whose\ turn\ it\ is\:\ "X's\ turn"\ or\ "O's\ turn",\ based\n\ \ \ \ on\ the\ value\ of\ turn.\n\ See\ example\ output\ in\ assignment\ 5\ description.\n\n\ Print\ the\ 3x3\ board\ of\ squares;\n\ Must\ use\ a\ for\ loop\ that\ repeats\ from\ 1-9;\n\ \ \ \ \ \ If\ a\ board\ array\ element\ contains\ 11,\ print\ "-X-";\n\ \ \ \ \ \ If\ a\ board\ array\ element\ contains\ 12,\ print\ "-O-";\n\ \ \ \ \ \ Otherwise,\ print\ the\ board\ element\ surrounded\ by\ a\ space\n\ \ \ \ on\ either\ side.\n\ \ \ \ \ \ After\ printing\ 3\ board\ elements,\ print\ a\ new\ line\ for\ the\ next\ row.\n\n\ After\ the\ loop,\ print\ whether\ it's\ "X's\ turn"\ or\ "O's\ turn",\n\ depending\ on\ whether\ the\ value\ of\ the\ turn\ instance\ variable\ is\n\ \ \ \ odd\ or\ even.\n
comment2.params=squareNumber
comment2.target=void\ takeSquare(int)
comment2.text=\n\ takeSquare\:\ Method\ to\ put\ "X"\ or\ "O"\ in\ one\ of\ the\ 9\ squares\n\n\ Place\ an\ "X"\ or\ "O"\ in\ the\ square\ indicated\ by\ squareNumber,\n\ \ \ \ depending\ on\ the\ value\ of\ turn.\n\n\ @param\ squareNumber\ (number\ from\ 1\ -\ 9)\n
comment3.params=squareNumber
comment3.target=boolean\ validSquare(int)
comment3.text=\n\ validSquare\:\ Method\ to\ check\ if\ input\ squareNumber\ is\ valid.\n\ A\ squareNumber\ is\ valid\ if\ it's\ between\ 1-9\ AND\n\ if\ the\ board[squareNumber]\ does\ not\ contain\ an\ "X"\ or\ "O".\n\n\ @param\ squareNumber\n\ @return\ valid,\ true\ if\ valid,\ false\ if\ invalid\n
comment4.params=
comment4.target=void\ playTicTacToe()
comment4.text=\n\ play\:\ Method\ to\ play\ TicTacToe.\n\ Requires\ Scanner.\n\n\ Pick\ a\ player\ for\ X\:\ human\ or\ machine\n\ Pick\ a\ player\ for\ O\:\ human\ or\ machine\n\ In\ a\ game\ loop\ that\ repeats\ 9\ times,\ do\:\n\ \ \ \ \ \ -\ Call\ showBoard\ to\ show\ the\ board.\n\ \ \ \ \ \ -\ Get\ X\ player\ or\ O\ player's\ square\ number\ by\ calling\ the\n\ \ \ \ \ \ \ \ getHumanSquare\ or\ getMachineSquare\ method.\ Which\ method\n\ \ \ \ \ \ \ \ you\ call\ depends\ on\ whose\ turn\ it\ is,\ and\ what\ type\ of\ players\n\ \ \ \ \ \ \ \ that\ X\ or\ O\ are.\n\ \ \ \ \ \ -\ Call\ the\ takeSquare()\ method\ with\ the\ square\ number\ that\n\ \ \ \ \ \ \ \ is\ returned\ by\ getHumanSquare()\ or\ getMachineSquare().\n\ \ \ \ \ \ -\ If\ anyone\ has\ won,\ break\ and\ declare\ winner.\n\ \ \ \ \ \ -\ Increment\ turn\ variable\ after\ every\ turn.\n\ \ \ \ \ \ \n\ Show\ the\ board\ again\ after\ the\ game\ loop\ ends.\n
comment5.params=
comment5.target=void\ sum()
comment6.params=
comment6.target=boolean\ hasWon()
comment6.text=\n\ hasWon\:\ Check\ for\ game\ won.\n\ If\ this\ method\ returns\ true,\ X\ or\ O\ has\ won.\n\ @return\ won,\ true\ or\ false\n
comment7.params=
comment7.target=int\ getHumanSquare()
comment7.text=\n\ getHumanSquare\:\ This\ method\ will\ ask\ a\ human\ player\ for\ an\n\ \ \ \ input\ square\ to\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ take.\ If\ the\ input\ square\ number\ is\ valid,\ return\ the\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ square\ number.\ The\ human\ player\ can\ be\n\ \ \ \ playing\ either\ X\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ or\ O.\n\ Requires\ Scanner.\n\ @return\ squareNumber,\ a\ valid\ squareNumber\ from\ 1-9\n\n
comment8.params=
comment8.target=int\ getMachineSquare()
comment8.text=\n\ getMachineSquare\:\ This\ method\ contains\ an\ algorithm\ through\ which\ the\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ computer\ will\ choose\ a\ valid\ square\n\ \ \ \ number\ to\ take\ to\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ win\ the\ game\ or\ to\ prevent\ the\ opponent\n\ \ \ \ from\ winning\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ game.\ The\ computer\ can\ be\ playing\n\ \ \ \ either\ X\ or\ O.\n\ @return\ squareNumber,\ a\ valid\ squareNumber\ from\ 1-9\n
numComments=9
